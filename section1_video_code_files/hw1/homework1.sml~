(*1 done
fun is_older (date1 : int*int*int , date2 : int*int*int ) =
  if ( #1 date1 > #1 date2 ) then false
  else if ( #1 date1 < #1 date2 ) then true
  else
      if ( #2 date1 > #2 date2 ) then false
      else if ( #2 date1 < #2 date2 ) then true
      else
	  if ( #3 date1 >= #3 date2 ) then false
	  else true
*)


fun check_month ( date : int*int*int , month : int ) = if #2 date = month then true else false

fun increase_1 ( i:igetnt ) = i + 1							
									     
fun number_in_month ( date_list : (int*int*int) list , month : int ) =
  if null date_list
  then i
  else
      let
	  number_in_month(tl date_list , month)
			 

(*6/7 done

fun get_nth( l : string list , num : int ) =
  if num = 1
  then hd l
  else get_nth(tl l , num-1)

val month_list = ["January","February","March","April","May","June","July","August","September","October","November","December"];

fun date_to_string( date: int*int*int ) =
  get_nth(month_list , #2 date)^(" ")^(Int.toString(#3 date))^(", ")^(Int.toString(#1 date))
									 
*)
